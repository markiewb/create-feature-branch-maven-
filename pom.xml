<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pany</groupId>
    <artifactId>sample</artifactId>
    <version>2.5.0-JIRA-88888-FixTheEncoding-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>sample</name>
    <modules>
        <module>submodule</module>
    </modules>

    <properties>
        <setversion.versionTemplate>2.5.0</setversion.versionTemplate>
        <setversion.issuePrefix>JIRA</setversion.issuePrefix>
    </properties>

    <!--Originally based on https://stackoverflow.com/a/12494574-->
    <profiles>

        <profile>
            <id>change-version</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <!-- allow to run this goal via a simple cmdline 'mvn' -->
                <defaultGoal>org.apache.maven.plugins:maven-antrun-plugin:run@create-branch-and-update-version</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>create-branch-and-update-version</id>
                                <!-- to prevent execution on every submodule - https://stackoverflow.com/a/7476142 -->
                                <inherited>false</inherited>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <!-- TODO check if changes in git workspace -->
                                    <!-- git branch feature/JIRA-12345-ShortDesc-->
                                    <!-- mvn versions:set -DnewVersion=2.12.0-JIRA-12345-ShortDesc-SNAPSHOT-->
                                    <!-- git add . -->
                                    <!-- git commit -m "REVERT ME"-->
                                    <!-- TODO git push origin feature/SWEMTS-12345-ShortDesc -->
                                    <!-- TODO open browser at GitBlit/GitLab/GitHub -->
                                    <!-- TODO trigger buildjob -->
                                    <target>
                                        <echo>
Please enter the issue number and a short description (example: '12345-Shortdesc'):

This script will
    a) create a branch called feature/${setversion.issuePrefix}-12345-Shortdesc
    b) set the pom-version to ${setversion.versionTemplate}-${setversion.issuePrefix}-12345-ShortDesc-SNAPSHOT
    c) commit the changes
                                        </echo>
                                        <!-- catch new version in a prompt == -->
                                        <input addproperty="new-user-version"/>
                                        <echo>.Create new branch</echo>
                                        <exec dir="." executable="git" failonerror="true">
                                            <arg line="checkout -b feature/${setversion.issuePrefix}-${new-user-version} --quiet"/>
                                        </exec>
                                        <echo>.Update pom-version</echo>
                                        <exec dir="." executable="mvn" failonerror="true">
                                            <arg line="org.codehaus.mojo:versions-maven-plugin:2.5:set -DnewVersion=${setversion.versionTemplate}-${setversion.issuePrefix}-${new-user-version}-SNAPSHOT -q"/>
                                        </exec>
                                        <echo>.Add and commit changes</echo>
                                        <!--Add changed pom.xml git add '*/pom.xml' 'pom.xml'-->
                                        <exec dir="." executable="git" failonerror="true">
                                            <arg line="add 'pom.xml' '*/pom.xml' -v"/>
                                        </exec>
                                        <!--commit pom.xml -->
                                        <exec dir="." executable="git" failonerror="true">
                                            <arg line="commit -m 'REVERT ME' -v"/>
                                        </exec>
                                        <echo>.Done</echo>

                                        <echo>
=========================================================================
Next steps:

a) Push your branch to remote via
    git push origin feature/${setversion.issuePrefix}-${new-user-version}
b) Trigger the build job 
    TODO
=========================================================================
                                        </echo>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
